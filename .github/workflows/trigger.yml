# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Trigger Automation

on:
  workflow_dispatch:

jobs:
  ui-automation:
    runs-on: ubuntu-latest

    # services:
    #   xvfb:
    #     image: docker.io/selenium/standalone-chrome:latest
    #     options: >-
    #       --shm-size 2g
    #       --name xvfb
    #       --label testing

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    # - name: Install Maven
    #   run: sudo apt-get install -y maven

    - name: Install Allure
      run: |
        curl -o allure-2.13.8.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.8/allure-commandline-2.13.8.tgz
        sudo tar -zxvf allure-2.13.8.tgz -C /opt/
        sudo ln -s /opt/allure-2.13.8/bin/allure /usr/bin/allure

    # - name: Start Xvfb
    #   run: |
    #     Xvfb :99 -screen 0 1920x1080x24 &

    - name: Run UI tests
      run: |
        mvn clean test
        export DISPLAY=:99
#      timeout-minutes: 40

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_REGION }}
    
    # - name: Taking History folder from the previous report
    #   run: aws s3 sync s3://${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}/qa-automation-reports/latest/history allure-results/history
    
    - name: Generate Allure Report
      if: always()
      run: |
        allure generate allure-results --clean -o allure-report

    # - name: Deploy to S3 bucket
    #   run: aws s3 sync allure-report s3://${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}/qa-automation-reports/latest --delete

    # - name: Publish Allure report
    #   if: always()
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: allure-report
    #     path: allure-report
